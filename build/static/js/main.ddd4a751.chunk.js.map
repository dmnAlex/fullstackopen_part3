{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["PersonForm","newName","newNumber","handleAddPerson","handleChangeName","handleChangeNumber","onSubmit","value","onChange","type","Person","person","handleDeletePerson","name","number","onClick","id","Persons","persons","map","Filter","newSearch","handleChangeSearch","baseUrl","personService","getAll","axios","get","then","response","data","create","newPerson","post","remove","delete","update","put","Notification","notificationMessage","notificationStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","message","style","App","useState","setPersons","setNewName","setNewNumber","setNewSearch","setNotificationMessage","useEffect","initialPersons","personsToShow","filter","toLowerCase","includes","showNotification","notification","setTimeout","event","target","preventDefault","personObject","updateId","forEach","returnedPerson","concat","catch","error","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddd4a751.chunk.js","sourcesContent":["const PersonForm = ({ newName, newNumber, handleAddPerson, handleChangeName, handleChangeNumber }) => (\r\n    <form onSubmit={handleAddPerson}>\r\n        <div>\r\n            name: <input value={newName} onChange={handleChangeName} />\r\n        </div>\r\n        <div>\r\n            number: <input value={newNumber} onChange={handleChangeNumber} />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n)\r\n\r\nexport default PersonForm","const Persons = ({ persons, handleDeletePerson }) => (\r\n    <div>\r\n        { persons.map(person => <Person key={person.id} person={person} handleDeletePerson={handleDeletePerson} />)}\r\n    </div>\r\n)\r\n\r\nconst Person = ({ person, handleDeletePerson }) => (\r\n    <p>{person.name} {person.number} <button onClick={() => {handleDeletePerson(person.id, person.name)}}>delete</button></p>\r\n)\r\n\r\nexport default Persons","const Filter = ({ newSearch, handleChangeSearch }) => (\r\n    <div>\r\n        filter shown with: <input value={newSearch} onChange={handleChangeSearch} />\r\n    </div>\r\n)\r\n\r\nexport default Filter","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    return axios.post(baseUrl, newPerson).then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    return axios.put(`${baseUrl}/${id}`, newPerson).then(response => response.data)\r\n}\r\n\r\nconst personService = {\r\n    getAll,\r\n    create,\r\n    remove,\r\n    update\r\n}\r\n\r\nexport default personService","const Notification = ({ notificationMessage }) => {\r\n    const notificationStyle = {\r\n        color: notificationMessage.color,\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    }\r\n\r\n    if (notificationMessage.message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div style={notificationStyle}>\r\n            {notificationMessage.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './PersonForm'\nimport Persons from './Persons'\nimport Filter from './Filter'\nimport personService from '../services/persons'\nimport Notification from './Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newSearch, setNewSearch] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState({ message: null, color: 'green' })\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n\n  const showNotification = (notification, color) => {\n    setNotificationMessage({ message: notification, color: color })\n    setTimeout(() => {\n      setNotificationMessage({ message: null, color: 'green' })\n    }, 5000)\n  }\n\n  const handleAddPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    let updateId = -1\n    persons.forEach(person => {\n      if (person.name === newName) {\n        updateId = person.id\n      }\n    })\n\n    if (updateId !== -1) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personService\n          .update(updateId, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id === updateId ? returnedPerson : person))\n            setNewName('')\n            setNewNumber('')\n            showNotification(`Changed ${newName}'s phone number`, 'green')\n          })\n          .catch(error => {\n            // setPersons(persons.filter(person => person.id !== updateId))\n            // setNewName('')\n            // setNewNumber('')\n            // showNotification(`Information of ${newName} has already been removed from server`, 'red')\n            showNotification(error.response.data.error, 'red')\n          })\n      }\n      return\n    }\n\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        showNotification(`Added ${returnedPerson.name}`, 'green')\n      })\n      .catch(error => {\n        showNotification(error.response.data.error, 'red')\n      })\n  }\n\n  const handleDeletePerson = (id, name) => {\n    if (!window.confirm(`Delete ${name}?`)) {\n      return\n    }\n\n    personService\n      .remove(id)\n      .then(response => {\n        setPersons(persons.filter(person => person.id !== id))\n        showNotification(`Deleted ${name}`, 'black')\n      })\n      .catch(error => {\n        setPersons(persons.filter(person => person.id !== id))\n        showNotification(`Information of ${name} has already been removed from server`, 'red')\n      })\n  }\n\n  const handleChangeName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleChangeNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleChangeSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notificationMessage={notificationMessage} />\n      <Filter newSearch={newSearch} handleChangeSearch={handleChangeSearch} />\n      <h2>Add a new</h2>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleAddPerson={handleAddPerson}\n        handleChangeName={handleChangeName}\n        handleChangeNumber={handleChangeNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} handleDeletePerson={handleDeletePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}